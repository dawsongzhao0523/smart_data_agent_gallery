{
  "plot_stock_data(stock_data: pd.DataFrame, ax: Optional[plt.Axes] = None, figure_type: str = 'line', title_name: str ='') -> plt.Axes:\n": "\"\"\"\n    This function plots stock data.\n\n    Args:\n    - stock_data: the stock data to plot. The DataFrame should contain three columns:\n        - Column 1: trade date in 'YYYYMMDD'\n        - Column 2: Stock name or code (string format)\n        - Column 3: Index value (numeric format)\n        The DataFrame can be time series data or cross-sectional data. If it is time-series data, the first column represents different trade time, the second column represents the same name. For cross-sectional data, the first column is the same, the second column contains different stocks.\n\n    - ax: matplotlib Axes object, the axes to plot the data on\n    - figure_type: either 'line' or 'bar'\n    - title_name\n\n    Returns:\n    - matplotlib Axes object, the axes containing the plot\n    \"\"\"",
  "plot_k_line(stock_data: pd.DataFrame, title: str = '') -> None:\n": "\"\"\"\n        Plots a K-line chart of stock price and volume.\n\n        Args:\n            stock_data : A pandas DataFrame containing the stock price information, in which each row\n                represents a daily record. The DataFrame must contain the 'trade_date','open', 'close', 'high', 'low','volume', 'name' columns, which is used for k-line and volume.\n                如果dataframe中还含有'macd'，'kdj', 'rsi', 'cci', 'boll','pe_ttm','turnover_rate'等列，则在k线图下方绘制这些指标的子图.\n        \"\"\"",
  "print_save_table(df: pd.DataFrame, title_name: str, save:bool = False ,file_path: str = './output/') -> None:": "\"\"\"\n        It prints the dataframe and saves it to a CSV file at the specified file path.\n\n        Args:\n        - df: the dataframe to be printed and saved to a CSV file\n        - title_name: the name to be printed and saved\n        - save: whether to save as a CSV file\n        - file_path \n\n      \"\"\"",
  "output_mean_median_col(data: pd.DataFrame, col: str = 'new_feature') -> float:\n": "# It calculates the mean and median value for the specified column."
}
